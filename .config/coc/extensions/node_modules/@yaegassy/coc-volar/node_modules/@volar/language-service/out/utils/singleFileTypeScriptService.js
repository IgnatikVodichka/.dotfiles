Object.defineProperty(exports, "__esModule", { value: true });
exports.updateSingleFileTypeScriptServiceHost = exports.singleFileTypeScriptServiceHost = void 0;
const shared = require("@volar/shared");
let projectVersion = 0;
let doc;
let scriptFileName;
let scriptSnapshot;
exports.singleFileTypeScriptServiceHost = {
    readFile: () => undefined,
    fileExists: fileName => fileName === scriptFileName,
    getProjectVersion: () => projectVersion.toString(),
    getScriptVersion: () => projectVersion.toString(),
    getCompilationSettings: () => ({ allowJs: true, jsx: 1 }),
    getScriptFileNames: () => [scriptFileName],
    getScriptSnapshot: fileName => {
        if (fileName === scriptFileName) {
            return scriptSnapshot;
        }
    },
    getCurrentDirectory: () => '',
    getDefaultLibFileName: () => '',
};
function updateSingleFileTypeScriptServiceHost(ts, _doc) {
    projectVersion++;
    doc = _doc;
    scriptFileName = shared.getPathOfUri(_doc.uri);
    scriptSnapshot = ts.ScriptSnapshot.fromString(doc.getText());
}
exports.updateSingleFileTypeScriptServiceHost = updateSingleFileTypeScriptServiceHost;
//# sourceMappingURL=singleFileTypeScriptService.js.map