Object.defineProperty(exports, "__esModule", { value: true });
exports.register = void 0;
const featureWorkers_1 = require("../utils/featureWorkers");
const transforms_1 = require("@volar/transforms");
const vscode = require("vscode-languageserver-protocol");
function register(context) {
    return (document) => {
        return (0, featureWorkers_1.documentFeatureWorker)(context, document, file => !!file.capabilities.documentSymbol, // TODO: add color capabilitie setting
        (plugin, document) => { var _a; return (_a = plugin.findDocumentSymbols) === null || _a === void 0 ? void 0 : _a.call(plugin, document); }, (data, map) => (0, transforms_1.transformSymbolInformations)(data, location => {
            const range = map.toSourceRange(location.range);
            if (range) {
                // use document.uri instead of map.sourceDocument.uri to fix https://github.com/johnsoncodehk/volar/issues/1925
                return vscode.Location.create(document.uri, range);
            }
        }), arr => arr.flat());
    };
}
exports.register = register;
//# sourceMappingURL=documentSymbols.js.map