import * as embedded from '@volar/language-core';
import type * as ts from 'typescript/lib/tsserverlibrary';
export declare function checkPropsOfTag(ts: typeof import('typescript/lib/tsserverlibrary'), tsLs: ts.LanguageService, sourceFile: embedded.VirtualFile, tag: string): string[];
export declare function checkEventsOfTag(ts: typeof import('typescript/lib/tsserverlibrary'), tsLs: ts.LanguageService, sourceFile: embedded.VirtualFile, tag: string): string[];
export declare function checkComponentNames(ts: typeof import('typescript/lib/tsserverlibrary'), tsLs: ts.LanguageService, sourceFile: embedded.VirtualFile): string[];
export declare function getElementAttrs(ts: typeof import('typescript/lib/tsserverlibrary'), tsLs: ts.LanguageService, fileName: string, tagName: string): string[];
type Tags = Map<string, {
    offsets: number[];
    attrs: Map<string, {
        offsets: number[];
    }>;
}>;
export declare function getTemplateTagsAndAttrs(sourceFile: embedded.VirtualFile): Tags;
export {};
