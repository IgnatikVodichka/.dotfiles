Object.defineProperty(exports, "__esModule", { value: true });
exports.notEmpty = exports.languageIdToSyntax = exports.syntaxToLanguageId = exports.sleep = void 0;
function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}
exports.sleep = sleep;
function syntaxToLanguageId(syntax) {
    switch (syntax) {
        case 'js': return 'javascript';
        case 'cjs': return 'javascript';
        case 'mjs': return 'javascript';
        case 'ts': return 'typescript';
        case 'cts': return 'typescript';
        case 'mts': return 'typescript';
        case 'jsx': return 'javascriptreact';
        case 'tsx': return 'typescriptreact';
        case 'pug': return 'jade';
        case 'md': return 'markdown';
    }
    return syntax;
}
exports.syntaxToLanguageId = syntaxToLanguageId;
function languageIdToSyntax(languageId) {
    switch (languageId) {
        case 'javascript': return 'js';
        case 'typescript': return 'ts';
        case 'javascriptreact': return 'jsx';
        case 'typescriptreact': return 'tsx';
        case 'jade': return 'pug';
        case 'markdown': return 'md';
    }
    return languageId;
}
exports.languageIdToSyntax = languageIdToSyntax;
function notEmpty(value) {
    return value !== null && value !== undefined;
}
exports.notEmpty = notEmpty;
//# sourceMappingURL=common.js.map